module cpu_card(
	input wire VCC,
	input wire GND,
	input wire clk,				// generated by motherboard clock generator
	input wire rst_n,			// probably a button on the motherboard
	output reg we,				// active high
	output reg oe,				// active high
	inout wire [7:0] data,
	output reg [15:0] addr,	    // 64k address space is suppored by default. More address bits may be added later
	output wire int_n			// pulled up by motherboard; driven down by any peripheral (could be used for interrupts)
);

reg [7:0] dat;
assign data = dat;
// "cpu card"
initial begin
	dat = 8'bz;
	addr = 16'h0;
	we = 1'b0;
	oe = 1'b0;
	delay(5);

	// write/read to simple card
	dat = 8'd25;
	addr = 16'h4000;
	we = 1'b1;
	delay(1);
	we = 1'b0;

	dat = 8'bz;
	oe = 1'b1;
	delay(1);
	oe = 1'b0;

	// write/read to alu card
	dat = 8'd50;
	addr = 16'h5001;
	we = 1'b1;
	delay(1);
	we = 1'b0;

	dat = 8'bz;
	oe = 1'b1;
	delay(1);
	oe = 1'b0;

	delay(1);

	addr = 16'h0;
end

task delay(input integer cycles);
	repeat(cycles) @(posedge clk);
endtask

endmodule